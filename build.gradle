// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'


}



allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }

    group = project.GROUP
}


task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    //Android
    compileSdkVersion = 23
    targetSdkVersion = 23
    minSdkVersion = 15
    minSdkVersionDev = 21
    buildToolsVersion = '23.0.3'

    //Libs
    junitVersion = '4.12'
    supportLibVersion = '23.4.0'
    rxjavaVersion = '1.1.6'
    rxAndroidVersion = '1.2.1'
    daggerVersion = '2.5'
    javaxVersion = "1.0"
    twitter4jVersion = "4.0.4"
    butterKnifeVersion = "8.1.0"
    multidexVersion = "1.0.0"
    leakCanaryVersion = "1.4-beta2"
    timberVersion = "4.1.2"
}

ext.deps = [
        junit                   : "junit:junit:$ext.junitVersion",
        appcompactV7            : "com.android.support:appcompat-v7:$ext.supportLibVersion",
        design                  : "com.android.support:design:$ext.supportLibVersion",
        rxJava                  : "io.reactivex:rxjava:$ext.rxjavaVersion",
        rxAndroid               : "io.reactivex:rxandroid:$ext.rxAndroidVersion",
        daggerCompiler          : "com.google.dagger:dagger-compiler:$ext.daggerVersion",
        dagger                  : "com.google.dagger:dagger:$ext.daggerVersion",
        javax                   : "javax.annotation:jsr250-api:$ext.javaxVersion",
        twitter4j               : "org.twitter4j:twitter4j-core:$ext.twitter4jVersion",
        twitter4jStream         : "org.twitter4j:twitter4j-stream:$ext.twitter4jVersion",
        twitter4jAsync          : "org.twitter4j:twitter4j-async:$ext.twitter4jVersion",
        butterKnife             : "com.jakewharton:butterknife:$ext.butterKnifeVersion",
        butterKnifeComipler     : "com.jakewharton:butterknife-compiler:$ext.butterKnifeVersion",
        multidex                : "com.android.support:multidex:$ext.multidexVersion",
        leakCanary              : "com.squareup.leakcanary:leakcanary-android:$ext.leakCanaryVersion",
        leakCanaryTestAndRelease: "com.squareup.leakcanary:leakcanary-android-no-op:$ext.leakCanaryVersion",
        timber                  : "com.jakewharton.timber:timber:$ext.timberVersion"


]

ext {
    if (project.hasProperty('preDexEnable')) {
        project.ext.preDexLibs = project.properties['preDexEnable'].equals('true')
    } else {
        project.ext.preDexLibs = true // pre dexing should be true by default
    }

    println('PREDEX ' + (project.ext.preDexLibs ? 'ENABLED' : 'DISABLED'))
    // goes to build log or console output
}

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}